<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd	
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
		
	<!-- 把标记了@Controller注解的类转换为bean -->
	<context:component-scan base-package="com.coolway.web" />
	
	<!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<!-- 总拦截器，用于处理权限 -->
	<!--<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"> 
		<property name="interceptors"> <list> <bean class="com.iphonele.beauty.web.helper.DefaultInteceptor"></bean> 
		</list> </property> </bean> -->

	<!-- 开启注解功能 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<!-- <util:list id="beanList"> <ref bean="mappingJacksonHttpMessageConverter" 
				/> </util:list> -->
			<list>
                <!-- 解析json请求数据，将json转换为java对象-->
				<bean
					class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
                <!--可以增加其他数据类型,请参考spring的API-->
            </list>
		</property>
	</bean>

	<!-- velocity视图解析器 -->
	<bean id="velocityViewResolver"
		class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
        <property name="cache" value="true"/>
        <property name="prefix" value="/"/>
        <property name="suffix" value=".vm"/>
        <property name="exposeSpringMacroHelpers" value="true" /><!--是否使用spring对宏定义的支持-->
        <property name="exposeRequestAttributes" value="true" /><!--是否开放request属性-->
        <property name="requestContextAttribute" value="request"/><!--request属性引用名称-->
        <property name="toolboxConfigLocation" value="/WEB-INF/toolbox.xml"/>
        <property name="contentType" value="text/html;charset=UTF-8" />
        <!--  <property name="layoutUrl" value="admin/login.vm"/>-->
         
        
    </bean>
    
    <!-- velocity环境配置 -->
	<bean id="velocityConfig"
		class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <!-- velocity配置文件路径 -->
        <property name="configLocation" value="classpath:velocity.properties"/>
        <!-- velocity模板路径 -->
        <property name="resourceLoaderPath" value="/WEB-INF/velocity/"/>
        <property name="velocityProperties">
			<props>
				<prop key="input.encoding">UTF-8</prop>
				<prop key="output.encoding">UTF-8</prop>
				<prop key="contentType">text/html;charset=UTF-8</prop>
				<!--  <prop key="userdirective">com.guang.prada.cache.ESICache</prop>-->
			</props>
		</property>
    </bean>

	
	<!-- 文件上传 -->
	<!-- <bean id="multipartResolver" class="com.iphonele.beauty.web.helper.DefaultMultipartResolver" 
		p:defaultEncoding="utf-8"> <property name="maxUploadSize" value="100000"/> 
		</bean> -->
	
	<!-- 总错误处理-->
	<!--<bean id="exceptionResolver" class="com.iphonele.beauty.web.helper.DefaultExceptionHander"> 
		<property name="exceptionMappings"> <props> <prop key="java.lang.Exception">error</prop> 
		<prop key="java.lang.Throwable">error</prop> </props> </property> <property 
		name="defaultErrorView"> <value>error</value> </property> 500是找不到服务器资源，这样不会到错误页面 
		<property name="defaultStatusCode"> <value>200</value> </property> <property 
		name="warnLogCategory"> <value> org.springframework.web.servlet.handler.SimpleMappingExceptionResolver 
		</value> </property> </bean> -->
		 
		 <!-- 
	<mvc:interceptors>
		<mvc:interceptor>
		<mvc:mapping path="/logout"/>
		<bean class="com.guang.prada.interceptor.AuthorizeInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
		  <mvc:mapping path="/account/*"/>
		<bean class="com.guang.prada.interceptor.AuthorizeInterceptor" />
		</mvc:interceptor>
		
		<mvc:interceptor>
		  <mvc:mapping path="/u/topic/*"/>
		  <bean class="com.guang.prada.interceptor.AuthorizeInterceptor" />
		</mvc:interceptor>
		
		<mvc:interceptor>
		  <mvc:mapping path="/baobei/*"/>
			<bean class="com.guang.prada.interceptor.HitLogInterceptor" />
		</mvc:interceptor>
		
		<mvc:interceptor>
		  <mvc:mapping path="/s/*"/>
			<bean class="com.guang.prada.interceptor.SearchLogInterceptor" />
		</mvc:interceptor>
		
	</mvc:interceptors>
	 -->
		<!-- 用户注册拦截 
    <bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
        <property name="beanNames">
            <list>
                <value>userServiceImpl</value>
            </list>
        </property>
        <property name="interceptorNames">
            <list>
                <value>userRegisterInterceptor</value>
            </list>
        </property>
    </bean>
    -->
    <!-- 权限管理 拦截器，针对controller级别的拦截
    <bean id="userRegisterInterceptor" class="com.guang.prada.service.user.impl.UserRegisterInterceptor"/>
    -->
</beans>  