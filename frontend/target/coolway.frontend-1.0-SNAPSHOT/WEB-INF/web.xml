<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	  
	<!-- spring配置文件加载路径 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:/applicationContext.xml</param-value>
	</context-param>
	
	<!-- 	<servlet>
		<servlet-name>ServletConfigurator</servlet-name>
		<servlet-class>
			org.logicalcobwebs.proxool.configuration.ServletConfigurator
		</servlet-class>
		<init-param>
			<param-name>xmlFile</param-name>
			<param-value>WEB-INF/proxool.xml</param-value>
		</init-param> -->
		

		
<!-- 		<load-on-startup>1</load-on-startup> -->
<!-- 	</servlet> -->

<!-- 	<servlet> -->
<!-- 		<servlet-name>proxoolAdmin</servlet-name> -->
<!-- 		<servlet-class> -->
<!-- 			org.logicalcobwebs.proxool.admin.servlet.AdminServlet -->
<!-- 		</servlet-class> -->
<!-- 	</servlet> -->
<!-- 	<servlet-mapping> -->
<!-- 		<servlet-name>proxoolAdmin</servlet-name> -->
<!-- 		<url-pattern>/proxoolAdmin</url-pattern> -->
<!-- 	</servlet-mapping> -->
	
	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>

	<!-- 静态资源不拦截 方式一 -->
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.css</url-pattern>
		<url-pattern>*.gif</url-pattern>
		<url-pattern>*.jpg</url-pattern>
		<url-pattern>*.js</url-pattern>
		<url-pattern>*.png</url-pattern>
		<url-pattern>*.htm</url-pattern>
		<url-pattern>*.ico</url-pattern>
		<url-pattern>*.txt</url-pattern>
		<url-pattern>/static/*</url-pattern>
	</servlet-mapping>


	<!--<servlet>
		<servlet-name>initServlet</servlet-name>
		<servlet-class>com.iphonele.beauty.util.web.InitServlet</servlet-class>
		<init-param>
		<param-name>properties</param-name>
		<param-value>/WEB-INF/classes/init.properties</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
		</servlet>-->

	<!-- spring mvc支持 -->
	<servlet>
		<servlet-name>spring</servlet-name>
		<servlet-class>
			org.springframework.web.servlet.DispatcherServlet
		</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping> 
		<servlet-name>spring</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	

	<!-- 支持 http的 put delete 方法 -->
	<!--<filter>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
		</filter>-->

	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>
			org.springframework.web.filter.CharacterEncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<!--<filter-mapping>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<servlet-name>spring</servlet-name>
		</filter-mapping>-->

	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- <listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
		</listener>
		<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/classes/log4j.xml</param-value>
		</context-param>-->
	
	<!-- cookie自动登录filter  
	<filter>  
	    <filter-name>cookie-login-filter</filter-name>  
	    <filter-class>com.guang.prada.filter.CookieLoginFilter</filter-class>  
	</filter>  
	<filter-mapping>  
	    <filter-name>cookie-login-filter</filter-name>  
	    <url-pattern>/*</url-pattern>  
	</filter-mapping> 
	
	 过滤XSS攻击字符 filter  
	<filter>  
	    <filter-name>crossScriptingFilter</filter-name>  
	    <filter-class>com.guang.prada.filter.CrossScriptingFilter</filter-class>  
	</filter>  
	<filter-mapping>  
	    <filter-name>crossScriptingFilter</filter-name>  
	    <url-pattern>/*</url-pattern>  
	</filter-mapping>   
	动态地址静态化
	<filter>
		<filter-name>UrlRewriteFilter</filter-name>
		<filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
		<init-param>
			<param-name>logLevel</param-name>
			<param-value>WARN</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>UrlRewriteFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping> -->
	
<!-- 	<welcome-file-list> -->
<!-- 		<welcome-file>/forward.jsp</welcome-file> -->
<!--   	</welcome-file-list> -->

	<error-page>
	     <error-code>404</error-code>
	    <location>/notfound.htm</location>
	</error-page>
	
	<error-page>
	    <error-code>500</error-code>
	    <location>/toobusy.htm</location>
	</error-page>

</web-app>
